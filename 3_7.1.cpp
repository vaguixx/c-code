#include <stdio.h>

int main() {
	double b = 3.14;
	double *pb = &b;
	printf("%lf\n", b);//double类型打印用%lf；
	printf("%p\n", pb);
	printf("double指针占用的内存大小是%d\n", sizeof(pb));
	int a = 10;
	int *p = &a;
	printf("int指针占用的内存大小为%d\n", sizeof(p));








	//int a = 10;//指针的理解，当一个变量存放于内存中时，为了方便找到该数据，于是给每个内存的
	//位置编了编号，记住这个相当于门牌号的编号就相当于记住了这个数据在内存中的位置
	//而引出的指针，通俗的讲，指针就是找一个地方存储数据，但是这个位置存储的是变量的
	//地址，即指针自身也有门牌号指向自己这个指针
	//printf("a的地址为%p\n", &a);//指针的作用绝对不是为了打印，而是为了能够反向找到该变量
	//int *p = &a;//这里的*的意思就是说明p是一个指针变量，int是指里面存放的数据类型，不是指针本身
	//的类型
	//printf("p里面存放的a的地址是%p\n", p);
	//printf("p的地址是%p\n", &p);//*p的意思就是找到p里面存储的地址的对象（变量）；
	//”*“叫做解引用操作符，也叫做间接访问操作符；
	//*p = 20;  //令*p的值为20；会导致p里面存储的地址指向的变量赋值
	//printf("a的值为%d\n", a);//p里存放的是a的地址，*p代表间接访问变量a，给*p赋值即是给a赋值


	return 0;
}